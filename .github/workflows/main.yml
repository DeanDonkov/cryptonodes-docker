name: Create and publish the coin's containers
on:
  push:
    branches: ['master']
  schedule: 
    - cron: "* * * * *"
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'tag for this image build'
        required: true
        default: 'latest'
    
jobs:
  build_coins:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - coin: "bitcoin"
            context: "./Bitcoin"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Get Latest Version
        run: |
          coin="${{ matrix.coin }}"
          if [ "$coin" == "bitcoin" ]; then
            version=$(curl https://api.github.com/repos/bitcoin/bitcoin/releases/latest |  python3 -c "import sys, json; print(json.load(sys.stdin)['tag_name'].replace('v', ''))")
            echo "${version}"
            echo "bitcoin={version}" >> $GITHUB_STATE
          fi
            echo "bitcoin={version}" >> $GITHUB_STATE
            echo "::set-env name=FOO::123"

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: deandonkov
          password: VESOq1q2q1
      -
        name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          push: true
          tags: deandonkov/${{ matrix.coin }}-core:latest
          build-args: |
            BITCOIN_VERSION=${ echo $FOO }
      - 
        name: Build and push with Tag
        uses: docker/build-push-action@v2
        if: 
          ${{ github.event.input.image_tag != null }}
        with:
          context: ${{ matrix.context }}
          push: true
          tags: deandonkov/${{ matrix.coin }}:${{ github.event.inputs.image_tag }}
