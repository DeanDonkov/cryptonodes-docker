name: Create and publish the coin's containers
on:
  push:
    branches: ['master']
  schedule: 
    - cron: "* * * * *"
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'tag for this image build'
        required: true
        default: 'latest'
    
jobs:
  build_coins:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - coin: "bitcoin"
            context: "./Bitcoin"
          - coin: "litecoin"
            context: "./Litecoin"
          - coin: "dogecoin"
            context: "./Dogecoin"
          - coin: "ethereum"
            context: "./Ethereum"
          - coin: "bitcoingold"
            context: "./BitcoinGold"
          - coin: "bitcoincash"
            context: "./BitcoinCash"
          - coin: "brise"
            context: "./Brise"
          - coin: "polygon"
            context: "./Polygon"
          - coin: "tron"
            context: "./Tron"
          - coin: "binancesmartchain"
            context: "./BinanceSmartChain"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Get Latest Version
        run: |
          coin="${{ matrix.coin }}"
          if [ "$coin" == "bitcoin" ]; then
            version=$(curl -Ls https://example.com/bitcoin_version)
          elif ["$coin" == "litecoin"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "dogecoin"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "ethereum"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "bitcoingold"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "bitcoincash"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "brise"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "polygon"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "tron"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          elif ["$coin" == "binancesmartchain"]; then
            version=$(curl -Ls https://example.com/ethereum_version)
          fi
            echo "::set-env name=${coin}_VERSION::$version"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: martinkey
          password: ${{ secrets.SECRET }}
      -
        name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          push: true
          tags: gostartups/${{ matrix.coin }}-core:latest
      - 
        name: Build and push with Tag
        uses: docker/build-push-action@v2
        if: 
          ${{ github.event.input.image_tag != null }}
        with:
          context: ${{ matrix.context }}
          push: true
          tags: gostartups/${{ matrix.coin }}:${{ github.event.inputs.image_tag }}
